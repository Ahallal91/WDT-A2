@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Mvc.Core.Common
@model IPagedList<BillPayDto>
@{
    ViewData["Title"] = "Billpays";
}

<h1>BillPay Index</h1>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].BillPayID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].AccountNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].PayeeID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].ScheduleDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Period)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].ModifyDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Status)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.BillPayID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AccountNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PayeeID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td>
                    @{
                        DateTime sDate = item.ScheduleDate.ToLocalTime();
                    }
                    @sDate
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Period)
                </td>
                <td>
                    @{
                        DateTime mDate = item.ModifyDate.ToLocalTime();
                    }
                    @mDate
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @if (item.Status != StatusType.Blocked)
                    {
                        <a asp-action="Edit" asp-controller="BillPay" asp-route-id="@item.BillPayID">Block</a>
                    }
                    else
                    {
                        <a asp-action="Edit" asp-controller="BillPay" asp-route-id="@item.BillPayID">Unblock</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
@Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
    new PagedListRenderOptions
        {
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" }
    })
@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}