@model IEnumerable<LoginDto>
@{
    ViewData["Title"] = "Logins";
}

<h1>Login Index</h1>
@Html.ValidationMessage("LoginEditFailed", new { @class = "text-danger" })
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CustomerId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModifyDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerId)
                </td>
                <td>
                    @{
                        DateTime date = item.ModifyDate.ToLocalTime();
                    }
                    @date
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @if (item.Status == ActiveType.Unlocked)
                    {
                        <a asp-action="Edit" asp-controller="CustomerAccount" asp-route-id="@item.Id">Block</a>
                    }
                    else
                    {
                        <a asp-action="Edit" asp-controller="CustomerAccount" asp-route-id="@item.Id">Unblock</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}